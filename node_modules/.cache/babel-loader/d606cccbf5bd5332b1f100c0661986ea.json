{"ast":null,"code":"\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\nfunction bytes2(data) {\n  if (data.length % 4 !== 0) {\n    throw new Error(\"bad data\");\n  }\n\n  let result = [];\n\n  for (let i = 0; i < data.length; i += 4) {\n    result.push(parseInt(data.substring(i, i + 4), 16));\n  }\n\n  return result;\n}\n\nfunction createTable(data, func) {\n  if (!func) {\n    func = function (value) {\n      return [parseInt(value, 16)];\n    };\n  }\n\n  let lo = 0;\n  let result = {};\n  data.split(\",\").forEach(pair => {\n    let comps = pair.split(\":\");\n    lo += parseInt(comps[0], 16);\n    result[lo] = func(comps[1]);\n  });\n  return result;\n}\n\nfunction createRangeTable(data) {\n  let hi = 0;\n  return data.split(\",\").map(v => {\n    let comps = v.split(\"-\");\n\n    if (comps.length === 1) {\n      comps[1] = \"0\";\n    } else if (comps[1] === \"\") {\n      comps[1] = \"1\";\n    }\n\n    let lo = hi + parseInt(comps[0], 16);\n    hi = parseInt(comps[1], 16);\n    return {\n      l: lo,\n      h: hi\n    };\n  });\n}\n\nfunction matchMap(value, ranges) {\n  let lo = 0;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let range = ranges[i];\n    lo += range.l;\n\n    if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {\n      if (range.e && range.e.indexOf(value - lo) !== -1) {\n        continue;\n      }\n\n      return range;\n    }\n  }\n\n  return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\"); // @TODO: Make this relative...\n\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map(v => parseInt(v, 16));\nconst Table_B_2_ranges = [{\n  h: 25,\n  s: 32,\n  l: 65\n}, {\n  h: 30,\n  s: 32,\n  e: [23],\n  l: 127\n}, {\n  h: 54,\n  s: 1,\n  e: [48],\n  l: 64,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 57,\n  d: 2\n}, {\n  h: 44,\n  s: 1,\n  l: 17,\n  d: 2\n}, {\n  h: 10,\n  s: 1,\n  e: [2, 6, 8],\n  l: 61,\n  d: 2\n}, {\n  h: 16,\n  s: 1,\n  l: 68,\n  d: 2\n}, {\n  h: 84,\n  s: 1,\n  e: [18, 24, 66],\n  l: 19,\n  d: 2\n}, {\n  h: 26,\n  s: 32,\n  e: [17],\n  l: 435\n}, {\n  h: 22,\n  s: 1,\n  l: 71,\n  d: 2\n}, {\n  h: 15,\n  s: 80,\n  l: 40\n}, {\n  h: 31,\n  s: 32,\n  l: 16\n}, {\n  h: 32,\n  s: 1,\n  l: 80,\n  d: 2\n}, {\n  h: 52,\n  s: 1,\n  l: 42,\n  d: 2\n}, {\n  h: 12,\n  s: 1,\n  l: 55,\n  d: 2\n}, {\n  h: 40,\n  s: 1,\n  e: [38],\n  l: 15,\n  d: 2\n}, {\n  h: 14,\n  s: 1,\n  l: 48,\n  d: 2\n}, {\n  h: 37,\n  s: 48,\n  l: 49\n}, {\n  h: 148,\n  s: 1,\n  l: 6351,\n  d: 2\n}, {\n  h: 88,\n  s: 1,\n  l: 160,\n  d: 2\n}, {\n  h: 15,\n  s: 16,\n  l: 704\n}, {\n  h: 25,\n  s: 26,\n  l: 854\n}, {\n  h: 25,\n  s: 32,\n  l: 55915\n}, {\n  h: 37,\n  s: 40,\n  l: 1247\n}, {\n  h: 25,\n  s: -119711,\n  l: 53248\n}, {\n  h: 25,\n  s: -119763,\n  l: 52\n}, {\n  h: 25,\n  s: -119815,\n  l: 52\n}, {\n  h: 25,\n  s: -119867,\n  e: [1, 4, 5, 7, 8, 11, 12, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -119919,\n  l: 52\n}, {\n  h: 24,\n  s: -119971,\n  e: [2, 7, 8, 17],\n  l: 52\n}, {\n  h: 24,\n  s: -120023,\n  e: [2, 7, 13, 15, 16, 17],\n  l: 52\n}, {\n  h: 25,\n  s: -120075,\n  l: 52\n}, {\n  h: 25,\n  s: -120127,\n  l: 52\n}, {\n  h: 25,\n  s: -120179,\n  l: 52\n}, {\n  h: 25,\n  s: -120231,\n  l: 52\n}, {\n  h: 25,\n  s: -120283,\n  l: 52\n}, {\n  h: 25,\n  s: -120335,\n  l: 52\n}, {\n  h: 24,\n  s: -119543,\n  e: [17],\n  l: 56\n}, {\n  h: 24,\n  s: -119601,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119659,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119717,\n  e: [17],\n  l: 58\n}, {\n  h: 24,\n  s: -119775,\n  e: [17],\n  l: 58\n}];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\nfunction flatten(values) {\n  return values.reduce((accum, value) => {\n    value.forEach(value => {\n      accum.push(value);\n    });\n    return accum;\n  }, []);\n}\n\nexport function _nameprepTableA1(codepoint) {\n  return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n  let range = matchMap(codepoint, Table_B_2_ranges);\n\n  if (range) {\n    return [codepoint + range.s];\n  }\n\n  let codes = Table_B_2_lut_abs[codepoint];\n\n  if (codes) {\n    return codes;\n  }\n\n  let shift = Table_B_2_lut_rel[codepoint];\n\n  if (shift) {\n    return [codepoint + shift[0]];\n  }\n\n  let complex = Table_B_2_complex[codepoint];\n\n  if (complex) {\n    return complex;\n  }\n\n  return null;\n}\nexport function _nameprepTableC(codepoint) {\n  return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n  // This allows platforms with incomplete normalize to bypass\n  // it for very basic names which the built-in toLowerCase\n  // will certainly handle correctly\n  if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n    return value.toLowerCase();\n  } // Get the code points (keeping the current normalization)\n\n\n  let codes = toUtf8CodePoints(value);\n  codes = flatten(codes.map(code => {\n    // Substitute Table B.1 (Maps to Nothing)\n    if (Table_B_1_flags.indexOf(code) >= 0) {\n      return [];\n    }\n\n    if (code >= 0xfe00 && code <= 0xfe0f) {\n      return [];\n    } // Substitute Table B.2 (Case Folding)\n\n\n    let codesTableB2 = _nameprepTableB2(code);\n\n    if (codesTableB2) {\n      return codesTableB2;\n    } // No Substitution\n\n\n    return [code];\n  })); // Normalize using form KC\n\n  codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC); // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n\n  codes.forEach(code => {\n    if (_nameprepTableC(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n    }\n  }); // Prohibit Unassigned Code Points (Table A.1)\n\n  codes.forEach(code => {\n    if (_nameprepTableA1(code)) {\n      throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n    }\n  }); // IDNA extras\n\n  let name = _toUtf8String(codes); // IDNA: 4.2.3.1\n\n\n  if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n    throw new Error(\"invalid hyphen\");\n  } // IDNA: 4.2.4\n\n\n  if (name.length > 63) {\n    throw new Error(\"too long\");\n  }\n\n  return name;\n}","map":{"version":3,"sources":["../src.ts/idna.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map"]},"metadata":{},"sourceType":"module"}