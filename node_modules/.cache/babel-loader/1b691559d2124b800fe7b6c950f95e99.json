{"ast":null,"code":"module.exports = encode;\nvar MSB = 0x80,\n    REST = 0x7F,\n    MSBALL = ~REST,\n    INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while (num >= INT) {\n    out[offset++] = num & 0xFF | MSB;\n    num /= 128;\n  }\n\n  while (num & MSBALL) {\n    out[offset++] = num & 0xFF | MSB;\n    num >>>= 7;\n  }\n\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}","map":{"version":3,"names":["module","exports","encode","MSB","REST","MSBALL","INT","Math","pow","num","out","offset","oldOffset","bytes"],"sources":["C:/Users/Lenovo/Desktop/OpenSea web3/my-app/node_modules/varint/encode.js"],"sourcesContent":["module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA,IAAIC,GAAG,GAAG,IAAV;AAAA,IACIC,IAAI,GAAG,IADX;AAAA,IAEIC,MAAM,GAAG,CAACD,IAFd;AAAA,IAGIE,GAAG,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAHV;;AAKA,SAASN,MAAT,CAAgBO,GAAhB,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;EAChCD,GAAG,GAAGA,GAAG,IAAI,EAAb;EACAC,MAAM,GAAGA,MAAM,IAAI,CAAnB;EACA,IAAIC,SAAS,GAAGD,MAAhB;;EAEA,OAAMF,GAAG,IAAIH,GAAb,EAAkB;IAChBI,GAAG,CAACC,MAAM,EAAP,CAAH,GAAiBF,GAAG,GAAG,IAAP,GAAeN,GAA/B;IACAM,GAAG,IAAI,GAAP;EACD;;EACD,OAAMA,GAAG,GAAGJ,MAAZ,EAAoB;IAClBK,GAAG,CAACC,MAAM,EAAP,CAAH,GAAiBF,GAAG,GAAG,IAAP,GAAeN,GAA/B;IACAM,GAAG,MAAM,CAAT;EACD;;EACDC,GAAG,CAACC,MAAD,CAAH,GAAcF,GAAG,GAAG,CAApB;EAEAP,MAAM,CAACW,KAAP,GAAeF,MAAM,GAAGC,SAAT,GAAqB,CAApC;EAEA,OAAOF,GAAP;AACD"},"metadata":{},"sourceType":"script"}