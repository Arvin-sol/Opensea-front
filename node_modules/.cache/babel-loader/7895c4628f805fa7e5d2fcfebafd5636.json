{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\n\nvar EventEmitter = require('eventemitter3');\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\n\n\nvar PromiEvent = function PromiEvent(justPromise) {\n  var resolve,\n      reject,\n      eventEmitter = new Promise(function () {\n    resolve = arguments[0];\n    reject = arguments[1];\n  });\n\n  if (justPromise) {\n    return {\n      resolve: resolve,\n      reject: reject,\n      eventEmitter: eventEmitter\n    };\n  } // get eventEmitter\n\n\n  var emitter = new EventEmitter(); // add eventEmitter to the promise\n\n  eventEmitter._events = emitter._events;\n  eventEmitter.emit = emitter.emit;\n  eventEmitter.on = emitter.on;\n  eventEmitter.once = emitter.once;\n  eventEmitter.off = emitter.off;\n  eventEmitter.listeners = emitter.listeners;\n  eventEmitter.addListener = emitter.addListener;\n  eventEmitter.removeListener = emitter.removeListener;\n  eventEmitter.removeAllListeners = emitter.removeAllListeners;\n  return {\n    resolve: resolve,\n    reject: reject,\n    eventEmitter: eventEmitter\n  };\n};\n\nPromiEvent.resolve = function (value) {\n  var promise = PromiEvent(true);\n  promise.resolve(value);\n  return promise.eventEmitter;\n};\n\nmodule.exports = PromiEvent;","map":{"version":3,"names":["EventEmitter","require","PromiEvent","justPromise","resolve","reject","eventEmitter","Promise","arguments","emitter","_events","emit","on","once","off","listeners","addListener","removeListener","removeAllListeners","value","promise","module","exports"],"sources":["C:/Users/Lenovo/Desktop/OpenSea web3/my-app/build/opensea-clone3/node_modules/web3-core-promievent/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\nvar EventEmitter = require('eventemitter3');\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n    var resolve, reject, eventEmitter = new Promise(function () {\n        resolve = arguments[0];\n        reject = arguments[1];\n    });\n    if (justPromise) {\n        return {\n            resolve: resolve,\n            reject: reject,\n            eventEmitter: eventEmitter\n        };\n    }\n    // get eventEmitter\n    var emitter = new EventEmitter();\n    // add eventEmitter to the promise\n    eventEmitter._events = emitter._events;\n    eventEmitter.emit = emitter.emit;\n    eventEmitter.on = emitter.on;\n    eventEmitter.once = emitter.once;\n    eventEmitter.off = emitter.off;\n    eventEmitter.listeners = emitter.listeners;\n    eventEmitter.addListener = emitter.addListener;\n    eventEmitter.removeListener = emitter.removeListener;\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\n    return {\n        resolve: resolve,\n        reject: reject,\n        eventEmitter: eventEmitter\n    };\n};\nPromiEvent.resolve = function (value) {\n    var promise = PromiEvent(true);\n    promise.resolve(value);\n    return promise.eventEmitter;\n};\nmodule.exports = PromiEvent;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,WAApB,EAAiC;EAC9C,IAAIC,OAAJ;EAAA,IAAaC,MAAb;EAAA,IAAqBC,YAAY,GAAG,IAAIC,OAAJ,CAAY,YAAY;IACxDH,OAAO,GAAGI,SAAS,CAAC,CAAD,CAAnB;IACAH,MAAM,GAAGG,SAAS,CAAC,CAAD,CAAlB;EACH,CAHmC,CAApC;;EAIA,IAAIL,WAAJ,EAAiB;IACb,OAAO;MACHC,OAAO,EAAEA,OADN;MAEHC,MAAM,EAAEA,MAFL;MAGHC,YAAY,EAAEA;IAHX,CAAP;EAKH,CAX6C,CAY9C;;;EACA,IAAIG,OAAO,GAAG,IAAIT,YAAJ,EAAd,CAb8C,CAc9C;;EACAM,YAAY,CAACI,OAAb,GAAuBD,OAAO,CAACC,OAA/B;EACAJ,YAAY,CAACK,IAAb,GAAoBF,OAAO,CAACE,IAA5B;EACAL,YAAY,CAACM,EAAb,GAAkBH,OAAO,CAACG,EAA1B;EACAN,YAAY,CAACO,IAAb,GAAoBJ,OAAO,CAACI,IAA5B;EACAP,YAAY,CAACQ,GAAb,GAAmBL,OAAO,CAACK,GAA3B;EACAR,YAAY,CAACS,SAAb,GAAyBN,OAAO,CAACM,SAAjC;EACAT,YAAY,CAACU,WAAb,GAA2BP,OAAO,CAACO,WAAnC;EACAV,YAAY,CAACW,cAAb,GAA8BR,OAAO,CAACQ,cAAtC;EACAX,YAAY,CAACY,kBAAb,GAAkCT,OAAO,CAACS,kBAA1C;EACA,OAAO;IACHd,OAAO,EAAEA,OADN;IAEHC,MAAM,EAAEA,MAFL;IAGHC,YAAY,EAAEA;EAHX,CAAP;AAKH,CA7BD;;AA8BAJ,UAAU,CAACE,OAAX,GAAqB,UAAUe,KAAV,EAAiB;EAClC,IAAIC,OAAO,GAAGlB,UAAU,CAAC,IAAD,CAAxB;EACAkB,OAAO,CAAChB,OAAR,CAAgBe,KAAhB;EACA,OAAOC,OAAO,CAACd,YAAf;AACH,CAJD;;AAKAe,MAAM,CAACC,OAAP,GAAiBpB,UAAjB"},"metadata":{},"sourceType":"script"}