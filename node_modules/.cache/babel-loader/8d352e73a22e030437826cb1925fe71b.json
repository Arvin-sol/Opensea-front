{"ast":null,"code":"import BN from 'bn.js';\nimport hash from 'hash.js';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\n\nfunction getDefaultExportFromNamespaceIfPresent(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nfunction getDefaultExportFromNamespaceIfNotNamed(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\n\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar minimalisticAssert = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\n\nvar utils_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n\n      return res;\n    }\n\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n\n    return res;\n  }\n\n  utils.toArray = toArray;\n\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n\n  utils.zero2 = zero2;\n\n  function toHex(msg) {\n    var res = '';\n\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n\n    return res;\n  }\n\n  utils.toHex = toHex;\n\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n  utils.assert = minimalisticAssert;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode; // Represent num in a w-NAF form\n\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n\n      naf[i] = z;\n      k.iushrn(1);\n    }\n\n    return naf;\n  }\n\n  utils.getNAF = getNAF; // Represent k1, k2 in a Joint Sparse Form\n\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n\n      jsf[0].push(u1);\n      var u2;\n\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n\n      jsf[1].push(u2); // Second phase\n\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n\n    return jsf;\n  }\n\n  utils.getJSF = getJSF;\n\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n\n  utils.cachedProperty = cachedProperty;\n\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n\n  utils.parseBytes = parseBytes;\n\n  function intFromLE(bytes) {\n    return new BN(bytes, 'hex', 'le');\n  }\n\n  utils.intFromLE = intFromLE;\n});\n'use strict';\n\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nvar base = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n  var j;\n  var nafW;\n\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n  var i;\n  var j;\n  var p;\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function\n  /*other*/\neq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};\n\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n\n        var TempCtor = function () {};\n\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\n'use strict';\n\nvar assert$2 = utils_1$1.assert;\n\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0; // If the curve is endomorphic, precalculate beta and lambda\n\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\n\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return; // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\n  var beta;\n  var lambda;\n\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p); // Choose the smallest beta\n\n\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  } // Get basis vectors, used for balanced length-two representation\n\n\n  var basis;\n\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2)); // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1); // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\n  var a0;\n  var b0; // First vector\n\n  var a1;\n  var b1; // Second vector\n\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  } // Normalize signs\n\n\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b); // Calculate answer\n\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point'); // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n\n    var p = points[i];\n\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult); // Clean-up references to points and coefficients\n\n\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16); // Force redgomery representation when loading from JSON\n\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\n\ninherits_browser(Point, base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\n  if (pre) {\n    var curve = this.curve;\n\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p; // P + O = P\n\n  if (p.inf) return this; // P + P = 2P\n\n  if (this.eq(p)) return this.dbl(); // P + (-P) = O\n\n  if (this.neg().eq(p)) return this.curve.point(null, null); // P + Q = O\n\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this; // 2P = O\n\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n\n    var negate = function (p) {\n      return p.neg();\n    };\n\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\n\ninherits_browser(JPoint, base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p; // P + O = P\n\n  if (p.isInfinity()) return this; // 12M + 4S + 7A\n\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ(); // P + O = P\n\n  if (p.isInfinity()) return this; // 8M + 3S + 7A\n\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n\n    for (i = 0; i < pow; i++) r = r.dbl();\n\n    return r;\n  } // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n\n\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr(); // Reuse results\n\n  var jyd = jy.redAdd(jy);\n\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a; a = 0\n\n    var m = xx.redAdd(xx).redIAdd(xx); // T = M ^ 2 - 2*S\n\n    var t = m.redSqr().redISub(s).redISub(s); // 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2*Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n    // A = X1^2\n    var a = this.x.redSqr(); // B = Y1^2\n\n    var b = this.y.redSqr(); // C = B^2\n\n    var c = b.redSqr(); // D = 2 * ((X1 + B)^2 - A - C)\n\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d); // E = 3 * A\n\n    var e = a.redAdd(a).redIAdd(a); // F = E^2\n\n    var f = e.redSqr(); // 8 * C\n\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8); // X3 = F - 2 * D\n\n    nx = f.redISub(d).redISub(d); // Y3 = E * (D - X3) - 8 * C\n\n    ny = e.redMul(d.redISub(nx)).redISub(c8); // Z3 = 2 * Y1 * Z1\n\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz; // Z = 1\n\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n    // XX = X1^2\n    var xx = this.x.redSqr(); // YY = Y1^2\n\n    var yy = this.y.redSqr(); // YYYY = YY^2\n\n    var yyyy = yy.redSqr(); // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s); // M = 3 * XX + a\n\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a); // T = M^2 - 2 * S\n\n    var t = m.redSqr().redISub(s).redISub(s); // X3 = T\n\n    nx = t; // Y3 = M * (S - T) - 8 * YYYY\n\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8); // Z3 = 2 * Y1\n\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n    // delta = Z1^2\n    var delta = this.z.redSqr(); // gamma = Y1^2\n\n    var gamma = this.y.redSqr(); // beta = X1 * gamma\n\n    var beta = this.x.redMul(gamma); // alpha = 3 * (X1 - delta) * (X1 + delta)\n\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha); // X3 = alpha^2 - 8 * beta\n\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8); // Z3 = (Y1 + Z1)^2 - gamma - delta\n\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta); // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a; // 4M + 6S + 10A\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this); // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n  // XX = X1^2\n\n  var xx = this.x.redSqr(); // YY = Y1^2\n\n  var yy = this.y.redSqr(); // ZZ = Z1^2\n\n  var zz = this.z.redSqr(); // YYYY = YY^2\n\n  var yyyy = yy.redSqr(); // M = 3 * XX + a * ZZ2; a = 0\n\n  var m = xx.redAdd(xx).redIAdd(xx); // MM = M^2\n\n  var mm = m.redSqr(); // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm); // EE = E^2\n\n  var ee = e.redSqr(); // T = 16*YYYY\n\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t); // U = (M + E)^2 - MM - EE - T\n\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t); // X3 = 4 * (X1 * EE - 4 * YY * U)\n\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx); // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny); // Z3 = (Z1 + E)^2 - ZZ - EE\n\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true; // x1 * z2^2 == x2 * z1^2\n\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false; // y1 * z2^3 == y2 * z1^3\n\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nvar curve_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont =\n  /*RicMoo:ethers:require(./mont)*/\n  null;\n  curve.edwards =\n  /*RicMoo:ethers:require(./edwards)*/\n  null;\n});\nvar curves_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curves = exports;\n  var assert = utils_1$1.assert;\n\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n\n  curves.PresetCurve = PresetCurve;\n\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a', // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n\n  try {\n    pre =\n    /*RicMoo:ethers:require(./precomputed/secp256k1)*/\n    null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n'use strict';\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._init(entropy, nonce, pers);\n}\n\nvar hmacDrbg = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required'); // Optional encoding\n\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  } // Optional additional data\n\n\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n\n    this._update(add);\n  }\n\n  var temp = [];\n\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n\n  this._update(add);\n\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n\n'use strict';\n\nvar assert$3 = utils_1$1.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null; // KeyPair(ec, { priv: ..., pub: ... })\n\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\n\nvar key = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16); // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n\n  this.pub = this.ec.curve.decodePoint(key, enc);\n}; // ECDH\n\n\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n\n  return pub.mul(this.priv).getX();\n}; // ECDSA\n\n\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n'use strict';\n\nvar assert$4 = utils_1$1.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\n\nvar signature = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n\n  var octetLen = initial & 0xf; // Indefinite length or overflow\n\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  } // Leading zeroes\n\n\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n\n  if (i === 0) {\n    return buf;\n  }\n\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n\n  var len = getLength(data, p);\n\n  if (len === false) {\n    return false;\n  }\n\n  if (len + p.place !== data.length) {\n    return false;\n  }\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var rlen = getLength(data, p);\n\n  if (rlen === false) {\n    return false;\n  }\n\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n\n  var slen = getLength(data, p);\n\n  if (slen === false) {\n    return false;\n  }\n\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n\n  var s = data.slice(p.place, slen + p.place);\n\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray(); // Pad values\n\n  if (r[0] & 0x80) r = [0].concat(r); // Pad values\n\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n\n'use strict';\n\nvar rand =\n/*RicMoo:ethers:require(brorand)*/\nfunction () {\n  throw new Error('unsupported');\n};\n\nvar assert$5 = utils_1$1.assert;\n\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options); // Shortcut `elliptic.ec(curve-name)`\n\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  } // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\n\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g; // Point on curve\n\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1); // Hash for function for DRBG\n\n  this.hash = options.hash || options.curve.hash;\n}\n\nvar ec = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {}; // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16)); // Zero-extend key to provide enough entropy\n\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes); // Zero-extend nonce to have the same byte size as N\n\n  var nonce = msg.toArray('be', bytes); // Instantiate Hmac_DRBG\n\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  }); // Number of bytes to generate\n\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0); // Use complement of `s`, if it is > `n / 2`\n\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex'); // Perform primitive values validation\n\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false; // Validate signature\n\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  } // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false; // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s; // A set LSB signifies that the y-coordinate is odd\n\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate'); // 1.1. Let x = r + jn.\n\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n); // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q)) return i;\n  }\n\n  throw new Error('Unable to find valid recovery factor');\n};\n\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var elliptic = exports;\n  elliptic.version =\n  /*RicMoo:ethers*/\n  {\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n\n  elliptic.rand =\n  /*RicMoo:ethers:require(brorand)*/\n  function () {\n    throw new Error('unsupported');\n  };\n\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1; // Protocols\n\n  elliptic.ec = ec;\n  elliptic.eddsa =\n  /*RicMoo:ethers:require(./elliptic/eddsa)*/\n  null;\n});\nvar EC$1 = elliptic_1.ec;\nexport { EC$1 as EC };","map":{"version":3,"sources":["../../../node_modules/minimalistic-assert/index.js","../../../node_modules/minimalistic-crypto-utils/lib/utils.js","../../../node_modules/elliptic/lib/elliptic/utils.js","../../../node_modules/elliptic/lib/elliptic/curve/base.js","../../../node_modules/inherits/inherits_browser.js","../../../node_modules/elliptic/lib/elliptic/curve/short.js","../../../node_modules/elliptic/lib/elliptic/curve/index.js","../../../node_modules/elliptic/lib/elliptic/curves.js","../../../node_modules/hmac-drbg/lib/hmac-drbg.js","../../../node_modules/elliptic/lib/elliptic/ec/key.js","../../../node_modules/elliptic/lib/elliptic/ec/signature.js","../../../node_modules/elliptic/lib/elliptic/ec/index.js","../../../node_modules/elliptic/lib/elliptic.js","elliptic.js"],"names":["minAssert","minUtils","utils","assert","Base","inherits","require$$0","require$$1","curve","curves","KeyPair","HmacDRBG","Signature","signature","require$$2","require$$3","EC","_ec"],"mappings":"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","sourcesContent":["module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map"]},"metadata":{},"sourceType":"module"}