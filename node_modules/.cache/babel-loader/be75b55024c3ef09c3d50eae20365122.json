{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar core = require('web3-core');\n\nvar helpers = require('web3-core-helpers');\n\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nvar Method = require('web3-core-method');\n\nvar utils = require('web3-utils');\n\nvar Net = require('web3-net');\n\nvar ENS = require('web3-eth-ens');\n\nvar Personal = require('web3-eth-personal');\n\nvar BaseContract = require('web3-eth-contract');\n\nvar Iban = require('web3-eth-iban');\n\nvar Accounts = require('web3-eth-accounts');\n\nvar abi = require('web3-eth-abi');\n\nvar getNetworkType = require('./getNetworkType.js');\n\nvar formatter = helpers.formatters;\n\nvar blockCall = function (args) {\n  return typeof args[0] === 'string' && args[0].indexOf('0x') === 0 ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\n\nvar transactionFromBlockCall = function (args) {\n  return typeof args[0] === 'string' && args[0].indexOf('0x') === 0 ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\n\nvar uncleCall = function (args) {\n  return typeof args[0] === 'string' && args[0].indexOf('0x') === 0 ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\n\nvar getBlockTransactionCountCall = function (args) {\n  return typeof args[0] === 'string' && args[0].indexOf('0x') === 0 ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\n\nvar uncleCountCall = function (args) {\n  return typeof args[0] === 'string' && args[0].indexOf('0x') === 0 ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\n\nvar Eth = function Eth() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // overwrite package setRequestManager\n\n  var setRequestManager = this.setRequestManager;\n\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n\n    _this.net.setRequestManager(manager);\n\n    _this.personal.setRequestManager(manager);\n\n    _this.accounts.setRequestManager(manager);\n\n    _this.Contract._requestManager = _this._requestManager;\n    _this.Contract.currentProvider = _this._provider;\n    return true;\n  }; // overwrite setProvider\n\n\n  var setProvider = this.setProvider;\n\n  this.setProvider = function () {\n    setProvider.apply(_this, arguments);\n\n    _this.setRequestManager(_this._requestManager); // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n\n\n    _this.ens._detectedAddress = null;\n    _this.ens._lastSyncCheck = null;\n  };\n\n  var handleRevert = false;\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  var transactionBlockTimeout = 50;\n  var transactionConfirmationBlocks = 24;\n  var transactionPollingTimeout = 750;\n  var transactionPollingInterval = 1000;\n  var blockHeaderTimeout = 10; // 10 seconds\n\n  var maxListenersWarningThreshold = 100;\n  var defaultChain, defaultHardfork, defaultCommon;\n  Object.defineProperty(this, 'handleRevert', {\n    get: function () {\n      return handleRevert;\n    },\n    set: function (val) {\n      handleRevert = val; // also set on the Contract object\n\n      _this.Contract.handleRevert = handleRevert; // update handleRevert\n\n      methods.forEach(function (method) {\n        method.handleRevert = handleRevert;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultCommon', {\n    get: function () {\n      return defaultCommon;\n    },\n    set: function (val) {\n      defaultCommon = val; // also set on the Contract object\n\n      _this.Contract.defaultCommon = defaultCommon; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultCommon = defaultCommon;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultHardfork', {\n    get: function () {\n      return defaultHardfork;\n    },\n    set: function (val) {\n      defaultHardfork = val; // also set on the Contract object\n\n      _this.Contract.defaultHardfork = defaultHardfork; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultHardfork = defaultHardfork;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultChain', {\n    get: function () {\n      return defaultChain;\n    },\n    set: function (val) {\n      defaultChain = val; // also set on the Contract object\n\n      _this.Contract.defaultChain = defaultChain; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultChain = defaultChain;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionPollingTimeout', {\n    get: function () {\n      return transactionPollingTimeout;\n    },\n    set: function (val) {\n      transactionPollingTimeout = val; // also set on the Contract object\n\n      _this.Contract.transactionPollingTimeout = transactionPollingTimeout; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionPollingTimeout = transactionPollingTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionPollingInterval', {\n    get: function () {\n      return transactionPollingInterval;\n    },\n    set: function (val) {\n      transactionPollingInterval = val; // also set on the Contract object\n\n      _this.Contract.transactionPollingInterval = transactionPollingInterval; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionPollingInterval = transactionPollingInterval;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionConfirmationBlocks', {\n    get: function () {\n      return transactionConfirmationBlocks;\n    },\n    set: function (val) {\n      transactionConfirmationBlocks = val; // also set on the Contract object\n\n      _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'transactionBlockTimeout', {\n    get: function () {\n      return transactionBlockTimeout;\n    },\n    set: function (val) {\n      transactionBlockTimeout = val; // also set on the Contract object\n\n      _this.Contract.transactionBlockTimeout = transactionBlockTimeout; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.transactionBlockTimeout = transactionBlockTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'blockHeaderTimeout', {\n    get: function () {\n      return blockHeaderTimeout;\n    },\n    set: function (val) {\n      blockHeaderTimeout = val; // also set on the Contract object\n\n      _this.Contract.blockHeaderTimeout = blockHeaderTimeout; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.blockHeaderTimeout = blockHeaderTimeout;\n      });\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n      } // also set on the Contract object\n\n\n      _this.Contract.defaultAccount = defaultAccount;\n      _this.personal.defaultAccount = defaultAccount; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val; // also set on the Contract object\n\n      _this.Contract.defaultBlock = defaultBlock;\n      _this.personal.defaultBlock = defaultBlock; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'maxListenersWarningThreshold', {\n    get: function () {\n      return maxListenersWarningThreshold;\n    },\n    set: function (val) {\n      if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n        maxListenersWarningThreshold = val;\n\n        _this.currentProvider.setMaxListeners(val);\n      }\n    },\n    enumerable: true\n  });\n  this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n  this.removeSubscriptionById = _this._requestManager.removeSubscription.bind(_this._requestManager); // add net\n\n  this.net = new Net(this); // add chain detection\n\n  this.net.getNetworkType = getNetworkType.bind(this); // add accounts\n\n  this.accounts = new Accounts(this); // add personal\n\n  this.personal = new Personal(this);\n  this.personal.defaultAccount = this.defaultAccount; // set warnings threshold\n\n  this.maxListenersWarningThreshold = maxListenersWarningThreshold; // create a proxy Contract type for this instance, as a Contract's provider\n  // is stored as a class member rather than an instance variable. If we do\n  // not create this proxy type, changing the provider in one instance of\n  // web3-eth would subsequently change the provider for _all_ contract\n  // instances!\n\n  var self = this;\n\n  var Contract = function Contract() {\n    BaseContract.apply(this, arguments); // when Eth.setProvider is called, call packageInit\n    // on all contract instances instantiated via this Eth\n    // instances. This will update the currentProvider for\n    // the contract instances\n\n    var _this = this;\n\n    var setProvider = self.setProvider;\n\n    self.setProvider = function () {\n      setProvider.apply(self, arguments);\n      core.packageInit(_this, [self]);\n    };\n  };\n\n  Contract.setProvider = function () {\n    BaseContract.setProvider.apply(this, arguments);\n  }; // make our proxy Contract inherit from web3-eth-contract so that it has all\n  // the right functionality and so that instanceof and friends work properly\n\n\n  Contract.prototype = Object.create(BaseContract.prototype);\n  Contract.prototype.constructor = Contract; // add contract\n\n  this.Contract = Contract;\n  this.Contract.defaultAccount = this.defaultAccount;\n  this.Contract.defaultBlock = this.defaultBlock;\n  this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n  this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n  this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n  this.Contract.transactionPollingInterval = this.transactionPollingInterval;\n  this.Contract.blockHeaderTimeout = this.blockHeaderTimeout;\n  this.Contract.handleRevert = this.handleRevert;\n  this.Contract._requestManager = this._requestManager;\n  this.Contract._ethAccounts = this.accounts;\n  this.Contract.currentProvider = this._requestManager.provider; // add IBAN\n\n  this.Iban = Iban; // add ABI\n\n  this.abi = abi; // add ENS\n\n  this.ens = new ENS(this);\n  var methods = [new Method({\n    name: 'getNodeInfo',\n    call: 'web3_clientVersion'\n  }), new Method({\n    name: 'getProtocolVersion',\n    call: 'eth_protocolVersion',\n    params: 0\n  }), new Method({\n    name: 'getCoinbase',\n    call: 'eth_coinbase',\n    params: 0\n  }), new Method({\n    name: 'isMining',\n    call: 'eth_mining',\n    params: 0\n  }), new Method({\n    name: 'getHashrate',\n    call: 'eth_hashrate',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'isSyncing',\n    call: 'eth_syncing',\n    params: 0,\n    outputFormatter: formatter.outputSyncingFormatter\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0,\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getFeeHistory',\n    call: 'eth_feeHistory',\n    params: 3,\n    inputFormatter: [utils.numberToHex, formatter.inputBlockNumberFormatter, null]\n  }), new Method({\n    name: 'getAccounts',\n    call: 'eth_accounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getBlockNumber',\n    call: 'eth_blockNumber',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBalance',\n    call: 'eth_getBalance',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputBigNumberFormatter\n  }), new Method({\n    name: 'getStorageAt',\n    call: 'eth_getStorageAt',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getCode',\n    call: 'eth_getCode',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n  }), new Method({\n    name: 'getBlock',\n    call: blockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, function (val) {\n      return !!val;\n    }],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getUncle',\n    call: uncleCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputBlockFormatter\n  }), new Method({\n    name: 'getBlockTransactionCount',\n    call: getBlockTransactionCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getBlockUncleCount',\n    call: uncleCountCall,\n    params: 1,\n    inputFormatter: [formatter.inputBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getTransaction',\n    call: 'eth_getTransactionByHash',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionFromBlock',\n    call: transactionFromBlockCall,\n    params: 2,\n    inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'getTransactionReceipt',\n    call: 'eth_getTransactionReceipt',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: formatter.outputTransactionReceiptFormatter\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'sendSignedTransaction',\n    call: 'eth_sendRawTransaction',\n    params: 1,\n    inputFormatter: [null],\n    abiCoder: abi\n  }), new Method({\n    name: 'signTransaction',\n    call: 'eth_signTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter]\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'eth_sendTransaction',\n    params: 1,\n    inputFormatter: [formatter.inputTransactionFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'sign',\n    call: 'eth_sign',\n    params: 2,\n    inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n    transformPayload: function (payload) {\n      payload.params.reverse();\n      return payload;\n    }\n  }), new Method({\n    name: 'call',\n    call: 'eth_call',\n    params: 2,\n    inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n    abiCoder: abi\n  }), new Method({\n    name: 'estimateGas',\n    call: 'eth_estimateGas',\n    params: 1,\n    inputFormatter: [formatter.inputCallFormatter],\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'submitWork',\n    call: 'eth_submitWork',\n    params: 3\n  }), new Method({\n    name: 'getWork',\n    call: 'eth_getWork',\n    params: 0\n  }), new Method({\n    name: 'getPastLogs',\n    call: 'eth_getLogs',\n    params: 1,\n    inputFormatter: [formatter.inputLogFormatter],\n    outputFormatter: formatter.outputLogFormatter\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'requestAccounts',\n    call: 'eth_requestAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'getProof',\n    call: 'eth_getProof',\n    params: 3,\n    inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n    outputFormatter: formatter.outputProofFormatter\n  }), new Method({\n    name: 'getPendingTransactions',\n    call: 'eth_pendingTransactions',\n    params: 0,\n    outputFormatter: formatter.outputTransactionFormatter\n  }), new Method({\n    name: 'createAccessList',\n    call: 'eth_createAccessList',\n    params: 2,\n    inputFormatter: [formatter.inputTransactionFormatter, formatter.inputDefaultBlockNumberFormatter]\n  }), // subscriptions\n  new Subscriptions({\n    name: 'subscribe',\n    type: 'eth',\n    subscriptions: {\n      'newBlockHeaders': {\n        // TODO rename on RPC side?\n        subscriptionName: 'newHeads',\n        params: 0,\n        outputFormatter: formatter.outputBlockFormatter\n      },\n      'pendingTransactions': {\n        subscriptionName: 'newPendingTransactions',\n        params: 0\n      },\n      'logs': {\n        params: 1,\n        inputFormatter: [formatter.inputLogFormatter],\n        outputFormatter: formatter.outputLogFormatter,\n        // DUBLICATE, also in web3-eth-contract\n        subscriptionHandler: function (output) {\n          if (output.removed) {\n            this.emit('changed', output);\n          } else {\n            this.emit('data', output);\n          }\n\n          if (typeof this.callback === 'function') {\n            this.callback(null, output, this);\n          }\n        }\n      },\n      'syncing': {\n        params: 0,\n        outputFormatter: formatter.outputSyncingFormatter,\n        subscriptionHandler: function (output) {\n          var _this = this; // fire TRUE at start\n\n\n          if (this._isSyncing !== true) {\n            this._isSyncing = true;\n            this.emit('changed', _this._isSyncing);\n\n            if (typeof this.callback === 'function') {\n              this.callback(null, _this._isSyncing, this);\n            }\n\n            setTimeout(function () {\n              _this.emit('data', output);\n\n              if (typeof _this.callback === 'function') {\n                _this.callback(null, output, _this);\n              }\n            }, 0); // fire sync status\n          } else {\n            this.emit('data', output);\n\n            if (typeof _this.callback === 'function') {\n              this.callback(null, output, this);\n            } // wait for some time before fireing the FALSE\n\n\n            clearTimeout(this._isSyncingTimeout);\n            this._isSyncingTimeout = setTimeout(function () {\n              if (output.currentBlock > output.highestBlock - 200) {\n                _this._isSyncing = false;\n\n                _this.emit('changed', _this._isSyncing);\n\n                if (typeof _this.callback === 'function') {\n                  _this.callback(null, _this._isSyncing, _this);\n                }\n              }\n            }, 500);\n          }\n        }\n      }\n    }\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n    method.transactionBlockTimeout = _this.transactionBlockTimeout;\n    method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n    method.transactionPollingTimeout = _this.transactionPollingTimeout;\n    method.transactionPollingInterval = _this.transactionPollingInterval;\n    method.handleRevert = _this.handleRevert;\n  });\n}; // Adds the static givenProvider and providers property to the Eth module\n\n\ncore.addProviders(Eth);\nmodule.exports = Eth;","map":{"version":3,"names":["core","require","helpers","Subscriptions","subscriptions","Method","utils","Net","ENS","Personal","BaseContract","Iban","Accounts","abi","getNetworkType","formatter","formatters","blockCall","args","indexOf","transactionFromBlockCall","uncleCall","getBlockTransactionCountCall","uncleCountCall","Eth","_this","packageInit","arguments","setRequestManager","manager","net","personal","accounts","Contract","_requestManager","currentProvider","_provider","setProvider","apply","ens","_detectedAddress","_lastSyncCheck","handleRevert","defaultAccount","defaultBlock","transactionBlockTimeout","transactionConfirmationBlocks","transactionPollingTimeout","transactionPollingInterval","blockHeaderTimeout","maxListenersWarningThreshold","defaultChain","defaultHardfork","defaultCommon","Object","defineProperty","get","set","val","methods","forEach","method","enumerable","toChecksumAddress","inputAddressFormatter","setMaxListeners","clearSubscriptions","bind","removeSubscriptionById","removeSubscription","self","prototype","create","constructor","_ethAccounts","provider","name","call","params","outputFormatter","hexToNumber","outputSyncingFormatter","outputBigNumberFormatter","inputFormatter","numberToHex","inputBlockNumberFormatter","inputDefaultBlockNumberFormatter","outputBlockFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","abiCoder","inputTransactionFormatter","inputSignFormatter","transformPayload","payload","reverse","inputCallFormatter","inputLogFormatter","outputLogFormatter","inputStorageKeysFormatter","outputProofFormatter","type","subscriptionName","subscriptionHandler","output","removed","emit","callback","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","addProviders","module","exports"],"sources":["C:/Users/Lenovo/Desktop/OpenSea web3/my-app/build/opensea-clone3/node_modules/web3-eth/lib/index.js"],"sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar core = require('web3-core');\nvar helpers = require('web3-core-helpers');\nvar Subscriptions = require('web3-core-subscriptions').subscriptions;\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\nvar ENS = require('web3-eth-ens');\nvar Personal = require('web3-eth-personal');\nvar BaseContract = require('web3-eth-contract');\nvar Iban = require('web3-eth-iban');\nvar Accounts = require('web3-eth-accounts');\nvar abi = require('web3-eth-abi');\nvar getNetworkType = require('./getNetworkType.js');\nvar formatter = helpers.formatters;\nvar blockCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? \"eth_getBlockByHash\" : \"eth_getBlockByNumber\";\n};\nvar transactionFromBlockCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getTransactionByBlockHashAndIndex' : 'eth_getTransactionByBlockNumberAndIndex';\n};\nvar uncleCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getUncleByBlockHashAndIndex' : 'eth_getUncleByBlockNumberAndIndex';\n};\nvar getBlockTransactionCountCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getBlockTransactionCountByHash' : 'eth_getBlockTransactionCountByNumber';\n};\nvar uncleCountCall = function (args) {\n    return (typeof args[0] === 'string' && args[0].indexOf('0x') === 0) ? 'eth_getUncleCountByBlockHash' : 'eth_getUncleCountByBlockNumber';\n};\nvar Eth = function Eth() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // overwrite package setRequestManager\n    var setRequestManager = this.setRequestManager;\n    this.setRequestManager = function (manager) {\n        setRequestManager(manager);\n        _this.net.setRequestManager(manager);\n        _this.personal.setRequestManager(manager);\n        _this.accounts.setRequestManager(manager);\n        _this.Contract._requestManager = _this._requestManager;\n        _this.Contract.currentProvider = _this._provider;\n        return true;\n    };\n    // overwrite setProvider\n    var setProvider = this.setProvider;\n    this.setProvider = function () {\n        setProvider.apply(_this, arguments);\n        _this.setRequestManager(_this._requestManager);\n        // Set detectedAddress/lastSyncCheck back to null because the provider could be connected to a different chain now\n        _this.ens._detectedAddress = null;\n        _this.ens._lastSyncCheck = null;\n    };\n    var handleRevert = false;\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    var transactionBlockTimeout = 50;\n    var transactionConfirmationBlocks = 24;\n    var transactionPollingTimeout = 750;\n    var transactionPollingInterval = 1000;\n    var blockHeaderTimeout = 10; // 10 seconds\n    var maxListenersWarningThreshold = 100;\n    var defaultChain, defaultHardfork, defaultCommon;\n    Object.defineProperty(this, 'handleRevert', {\n        get: function () {\n            return handleRevert;\n        },\n        set: function (val) {\n            handleRevert = val;\n            // also set on the Contract object\n            _this.Contract.handleRevert = handleRevert;\n            // update handleRevert\n            methods.forEach(function (method) {\n                method.handleRevert = handleRevert;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultCommon', {\n        get: function () {\n            return defaultCommon;\n        },\n        set: function (val) {\n            defaultCommon = val;\n            // also set on the Contract object\n            _this.Contract.defaultCommon = defaultCommon;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultCommon = defaultCommon;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultHardfork', {\n        get: function () {\n            return defaultHardfork;\n        },\n        set: function (val) {\n            defaultHardfork = val;\n            // also set on the Contract object\n            _this.Contract.defaultHardfork = defaultHardfork;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultHardfork = defaultHardfork;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultChain', {\n        get: function () {\n            return defaultChain;\n        },\n        set: function (val) {\n            defaultChain = val;\n            // also set on the Contract object\n            _this.Contract.defaultChain = defaultChain;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultChain = defaultChain;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingTimeout', {\n        get: function () {\n            return transactionPollingTimeout;\n        },\n        set: function (val) {\n            transactionPollingTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionPollingTimeout = transactionPollingTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionPollingTimeout = transactionPollingTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionPollingInterval', {\n        get: function () {\n            return transactionPollingInterval;\n        },\n        set: function (val) {\n            transactionPollingInterval = val;\n            // also set on the Contract object\n            _this.Contract.transactionPollingInterval = transactionPollingInterval;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionPollingInterval = transactionPollingInterval;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionConfirmationBlocks', {\n        get: function () {\n            return transactionConfirmationBlocks;\n        },\n        set: function (val) {\n            transactionConfirmationBlocks = val;\n            // also set on the Contract object\n            _this.Contract.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionConfirmationBlocks = transactionConfirmationBlocks;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'transactionBlockTimeout', {\n        get: function () {\n            return transactionBlockTimeout;\n        },\n        set: function (val) {\n            transactionBlockTimeout = val;\n            // also set on the Contract object\n            _this.Contract.transactionBlockTimeout = transactionBlockTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.transactionBlockTimeout = transactionBlockTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'blockHeaderTimeout', {\n        get: function () {\n            return blockHeaderTimeout;\n        },\n        set: function (val) {\n            blockHeaderTimeout = val;\n            // also set on the Contract object\n            _this.Contract.blockHeaderTimeout = blockHeaderTimeout;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.blockHeaderTimeout = blockHeaderTimeout;\n            });\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatter.inputAddressFormatter(val));\n            }\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount;\n            _this.personal.defaultAccount = defaultAccount;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultAccount = defaultAccount;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock;\n            _this.personal.defaultBlock = defaultBlock;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultBlock = defaultBlock;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'maxListenersWarningThreshold', {\n        get: function () {\n            return maxListenersWarningThreshold;\n        },\n        set: function (val) {\n            if (_this.currentProvider && _this.currentProvider.setMaxListeners) {\n                maxListenersWarningThreshold = val;\n                _this.currentProvider.setMaxListeners(val);\n            }\n        },\n        enumerable: true\n    });\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions.bind(_this._requestManager);\n    this.removeSubscriptionById = _this._requestManager.removeSubscription.bind(_this._requestManager);\n    // add net\n    this.net = new Net(this);\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this);\n    // add accounts\n    this.accounts = new Accounts(this);\n    // add personal\n    this.personal = new Personal(this);\n    this.personal.defaultAccount = this.defaultAccount;\n    // set warnings threshold\n    this.maxListenersWarningThreshold = maxListenersWarningThreshold;\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // web3-eth would subsequently change the provider for _all_ contract\n    // instances!\n    var self = this;\n    var Contract = function Contract() {\n        BaseContract.apply(this, arguments);\n        // when Eth.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Eth\n        // instances. This will update the currentProvider for\n        // the contract instances\n        var _this = this;\n        var setProvider = self.setProvider;\n        self.setProvider = function () {\n            setProvider.apply(self, arguments);\n            core.packageInit(_this, [self]);\n        };\n    };\n    Contract.setProvider = function () {\n        BaseContract.setProvider.apply(this, arguments);\n    };\n    // make our proxy Contract inherit from web3-eth-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype);\n    Contract.prototype.constructor = Contract;\n    // add contract\n    this.Contract = Contract;\n    this.Contract.defaultAccount = this.defaultAccount;\n    this.Contract.defaultBlock = this.defaultBlock;\n    this.Contract.transactionBlockTimeout = this.transactionBlockTimeout;\n    this.Contract.transactionConfirmationBlocks = this.transactionConfirmationBlocks;\n    this.Contract.transactionPollingTimeout = this.transactionPollingTimeout;\n    this.Contract.transactionPollingInterval = this.transactionPollingInterval;\n    this.Contract.blockHeaderTimeout = this.blockHeaderTimeout;\n    this.Contract.handleRevert = this.handleRevert;\n    this.Contract._requestManager = this._requestManager;\n    this.Contract._ethAccounts = this.accounts;\n    this.Contract.currentProvider = this._requestManager.provider;\n    // add IBAN\n    this.Iban = Iban;\n    // add ABI\n    this.abi = abi;\n    // add ENS\n    this.ens = new ENS(this);\n    var methods = [\n        new Method({\n            name: 'getNodeInfo',\n            call: 'web3_clientVersion'\n        }),\n        new Method({\n            name: 'getProtocolVersion',\n            call: 'eth_protocolVersion',\n            params: 0\n        }),\n        new Method({\n            name: 'getCoinbase',\n            call: 'eth_coinbase',\n            params: 0\n        }),\n        new Method({\n            name: 'isMining',\n            call: 'eth_mining',\n            params: 0\n        }),\n        new Method({\n            name: 'getHashrate',\n            call: 'eth_hashrate',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'isSyncing',\n            call: 'eth_syncing',\n            params: 0,\n            outputFormatter: formatter.outputSyncingFormatter\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0,\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getFeeHistory',\n            call: 'eth_feeHistory',\n            params: 3,\n            inputFormatter: [utils.numberToHex, formatter.inputBlockNumberFormatter, null]\n        }),\n        new Method({\n            name: 'getAccounts',\n            call: 'eth_accounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getBlockNumber',\n            call: 'eth_blockNumber',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBalance',\n            call: 'eth_getBalance',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputBigNumberFormatter\n        }),\n        new Method({\n            name: 'getStorageAt',\n            call: 'eth_getStorageAt',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, utils.numberToHex, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getCode',\n            call: 'eth_getCode',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter]\n        }),\n        new Method({\n            name: 'getBlock',\n            call: blockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, function (val) { return !!val; }],\n            outputFormatter: formatter.outputBlockFormatter\n        }),\n        new Method({\n            name: 'getUncle',\n            call: uncleCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputBlockFormatter,\n        }),\n        new Method({\n            name: 'getBlockTransactionCount',\n            call: getBlockTransactionCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getBlockUncleCount',\n            call: uncleCountCall,\n            params: 1,\n            inputFormatter: [formatter.inputBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getTransaction',\n            call: 'eth_getTransactionByHash',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionFromBlock',\n            call: transactionFromBlockCall,\n            params: 2,\n            inputFormatter: [formatter.inputBlockNumberFormatter, utils.numberToHex],\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'getTransactionReceipt',\n            call: 'eth_getTransactionReceipt',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: formatter.outputTransactionReceiptFormatter\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'sendSignedTransaction',\n            call: 'eth_sendRawTransaction',\n            params: 1,\n            inputFormatter: [null],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'eth_signTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter]\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'eth_sendTransaction',\n            params: 1,\n            inputFormatter: [formatter.inputTransactionFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'sign',\n            call: 'eth_sign',\n            params: 2,\n            inputFormatter: [formatter.inputSignFormatter, formatter.inputAddressFormatter],\n            transformPayload: function (payload) {\n                payload.params.reverse();\n                return payload;\n            }\n        }),\n        new Method({\n            name: 'call',\n            call: 'eth_call',\n            params: 2,\n            inputFormatter: [formatter.inputCallFormatter, formatter.inputDefaultBlockNumberFormatter],\n            abiCoder: abi\n        }),\n        new Method({\n            name: 'estimateGas',\n            call: 'eth_estimateGas',\n            params: 1,\n            inputFormatter: [formatter.inputCallFormatter],\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'submitWork',\n            call: 'eth_submitWork',\n            params: 3\n        }),\n        new Method({\n            name: 'getWork',\n            call: 'eth_getWork',\n            params: 0\n        }),\n        new Method({\n            name: 'getPastLogs',\n            call: 'eth_getLogs',\n            params: 1,\n            inputFormatter: [formatter.inputLogFormatter],\n            outputFormatter: formatter.outputLogFormatter\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'requestAccounts',\n            call: 'eth_requestAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'getProof',\n            call: 'eth_getProof',\n            params: 3,\n            inputFormatter: [formatter.inputAddressFormatter, formatter.inputStorageKeysFormatter, formatter.inputDefaultBlockNumberFormatter],\n            outputFormatter: formatter.outputProofFormatter\n        }),\n        new Method({\n            name: 'getPendingTransactions',\n            call: 'eth_pendingTransactions',\n            params: 0,\n            outputFormatter: formatter.outputTransactionFormatter\n        }),\n        new Method({\n            name: 'createAccessList',\n            call: 'eth_createAccessList',\n            params: 2,\n            inputFormatter: [formatter.inputTransactionFormatter, formatter.inputDefaultBlockNumberFormatter],\n        }),\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'eth',\n            subscriptions: {\n                'newBlockHeaders': {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads',\n                    params: 0,\n                    outputFormatter: formatter.outputBlockFormatter\n                },\n                'pendingTransactions': {\n                    subscriptionName: 'newPendingTransactions',\n                    params: 0\n                },\n                'logs': {\n                    params: 1,\n                    inputFormatter: [formatter.inputLogFormatter],\n                    outputFormatter: formatter.outputLogFormatter,\n                    // DUBLICATE, also in web3-eth-contract\n                    subscriptionHandler: function (output) {\n                        if (output.removed) {\n                            this.emit('changed', output);\n                        }\n                        else {\n                            this.emit('data', output);\n                        }\n                        if (typeof this.callback === 'function') {\n                            this.callback(null, output, this);\n                        }\n                    }\n                },\n                'syncing': {\n                    params: 0,\n                    outputFormatter: formatter.outputSyncingFormatter,\n                    subscriptionHandler: function (output) {\n                        var _this = this;\n                        // fire TRUE at start\n                        if (this._isSyncing !== true) {\n                            this._isSyncing = true;\n                            this.emit('changed', _this._isSyncing);\n                            if (typeof this.callback === 'function') {\n                                this.callback(null, _this._isSyncing, this);\n                            }\n                            setTimeout(function () {\n                                _this.emit('data', output);\n                                if (typeof _this.callback === 'function') {\n                                    _this.callback(null, output, _this);\n                                }\n                            }, 0);\n                            // fire sync status\n                        }\n                        else {\n                            this.emit('data', output);\n                            if (typeof _this.callback === 'function') {\n                                this.callback(null, output, this);\n                            }\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout);\n                            this._isSyncingTimeout = setTimeout(function () {\n                                if (output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false;\n                                    _this.emit('changed', _this._isSyncing);\n                                    if (typeof _this.callback === 'function') {\n                                        _this.callback(null, _this._isSyncing, _this);\n                                    }\n                                }\n                            }, 500);\n                        }\n                    }\n                }\n            }\n        })\n    ];\n    methods.forEach(function (method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager, _this.accounts); // second param is the eth.accounts module (necessary for signing transactions locally)\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n        method.transactionBlockTimeout = _this.transactionBlockTimeout;\n        method.transactionConfirmationBlocks = _this.transactionConfirmationBlocks;\n        method.transactionPollingTimeout = _this.transactionPollingTimeout;\n        method.transactionPollingInterval = _this.transactionPollingInterval;\n        method.handleRevert = _this.handleRevert;\n    });\n};\n// Adds the static givenProvider and providers property to the Eth module\ncore.addProviders(Eth);\nmodule.exports = Eth;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}