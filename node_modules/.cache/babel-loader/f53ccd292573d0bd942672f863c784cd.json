{"ast":null,"code":"import React, { useReducer, useRef, useCallback, useEffect, createContext, useMemo, useContext } from 'react';\nimport invariant from 'tiny-invariant';\nimport { ConnectorEvent } from '@web3-react/types';\nimport warning from 'tiny-warning';\nimport { arrayify } from '@ethersproject/bytes';\nimport { keccak256 } from '@ethersproject/keccak256';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n} // A type of promise-like that resolves synchronously and supports only one observer\n\n\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol(\"Symbol.iterator\")) : \"@@iterator\"; // Asynchronously iterate through an object's values\n\n\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\n\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n} // Asynchronously await a promise and pass the result to a finally continuation\n\n\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === 'string') {\n    // Temporary fix until the next version of Metamask Mobile gets released.\n    // In the current version (0.2.13), the chainId starts with “Ox” rather\n    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275\n    chainId = chainId.replace(/^Ox/, '0x');\n    var parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10);\n    !!Number.isNaN(parsedChainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"chainId \" + chainId + \" is not an integer\") : invariant(false) : void 0;\n    return parsedChainId;\n  } else {\n    !Number.isInteger(chainId) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"chainId \" + chainId + \" is not an integer\") : invariant(false) : void 0;\n    return chainId;\n  }\n} // https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts\n\n\nfunction normalizeAccount(_address) {\n  !(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/)) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid address \" + _address) : invariant(false) : void 0;\n  var address = _address.substring(0, 2) === '0x' ? _address : \"0x\" + _address;\n  var chars = address.toLowerCase().substring(2).split('');\n  var charsArray = new Uint8Array(40);\n\n  for (var i = 0; i < 40; i++) {\n    charsArray[i] = chars[i].charCodeAt(0);\n  }\n\n  var hashed = arrayify(keccak256(charsArray));\n\n  for (var _i = 0; _i < 40; _i += 2) {\n    if (hashed[_i >> 1] >> 4 >= 8) {\n      chars[_i] = chars[_i].toUpperCase();\n    }\n\n    if ((hashed[_i >> 1] & 0x0f) >= 8) {\n      chars[_i + 1] = chars[_i + 1].toUpperCase();\n    }\n  }\n\n  var addressChecksum = \"0x\" + chars.join('');\n  !!(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Bad address checksum \" + address + \" \" + addressChecksum) : invariant(false) : void 0;\n  return addressChecksum;\n}\n\nvar augmentConnectorUpdate = function augmentConnectorUpdate(connector, update) {\n  try {\n    var _temp3 = function _temp3(provider) {\n      return Promise.resolve(Promise.all([update.chainId === undefined ? connector.getChainId() : update.chainId, update.account === undefined ? connector.getAccount() : update.account])).then(function (_ref2) {\n        var _chainId = _ref2[0],\n            _account = _ref2[1];\n        var chainId = normalizeChainId(_chainId);\n\n        if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n          throw new UnsupportedChainIdError(chainId, connector.supportedChainIds);\n        }\n\n        var account = _account === null ? _account : normalizeAccount(_account);\n        return {\n          provider: provider,\n          chainId: chainId,\n          account: account\n        };\n      });\n    };\n\n    var _temp4 = update.provider === undefined;\n\n    return Promise.resolve(_temp4 ? Promise.resolve(connector.getProvider()).then(_temp3) : _temp3(update.provider));\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\n\nvar StaleConnectorError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(StaleConnectorError, _Error);\n\n  function StaleConnectorError() {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    return _this;\n  }\n\n  return StaleConnectorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar UnsupportedChainIdError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(UnsupportedChainIdError, _Error2);\n\n  function UnsupportedChainIdError(unsupportedChainId, supportedChainIds) {\n    var _this2;\n\n    _this2 = _Error2.call(this) || this;\n    _this2.name = _this2.constructor.name;\n    _this2.message = \"Unsupported chain id: \" + unsupportedChainId + \". Supported chain ids are: \" + supportedChainIds + \".\";\n    return _this2;\n  }\n\n  return UnsupportedChainIdError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[ActionType[\"ACTIVATE_CONNECTOR\"] = 0] = \"ACTIVATE_CONNECTOR\";\n  ActionType[ActionType[\"UPDATE\"] = 1] = \"UPDATE\";\n  ActionType[ActionType[\"UPDATE_FROM_ERROR\"] = 2] = \"UPDATE_FROM_ERROR\";\n  ActionType[ActionType[\"ERROR\"] = 3] = \"ERROR\";\n  ActionType[ActionType[\"ERROR_FROM_ACTIVATION\"] = 4] = \"ERROR_FROM_ACTIVATION\";\n  ActionType[ActionType[\"DEACTIVATE_CONNECTOR\"] = 5] = \"DEACTIVATE_CONNECTOR\";\n})(ActionType || (ActionType = {}));\n\nfunction reducer(state, _ref) {\n  var type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case ActionType.ACTIVATE_CONNECTOR:\n      {\n        var connector = payload.connector,\n            provider = payload.provider,\n            chainId = payload.chainId,\n            account = payload.account,\n            onError = payload.onError;\n        return {\n          connector: connector,\n          provider: provider,\n          chainId: chainId,\n          account: account,\n          onError: onError\n        };\n      }\n\n    case ActionType.UPDATE:\n      {\n        var _provider = payload.provider,\n            _chainId2 = payload.chainId,\n            _account2 = payload.account;\n        return _extends({}, state, _provider === undefined ? {} : {\n          provider: _provider\n        }, _chainId2 === undefined ? {} : {\n          chainId: _chainId2\n        }, _account2 === undefined ? {} : {\n          account: _account2\n        });\n      }\n\n    case ActionType.UPDATE_FROM_ERROR:\n      {\n        var _provider2 = payload.provider,\n            _chainId3 = payload.chainId,\n            _account3 = payload.account;\n        return _extends({}, state, _provider2 === undefined ? {} : {\n          provider: _provider2\n        }, _chainId3 === undefined ? {} : {\n          chainId: _chainId3\n        }, _account3 === undefined ? {} : {\n          account: _account3\n        }, {\n          error: undefined\n        });\n      }\n\n    case ActionType.ERROR:\n      {\n        var error = payload.error;\n        var _connector = state.connector,\n            _onError = state.onError;\n        return {\n          connector: _connector,\n          error: error,\n          onError: _onError\n        };\n      }\n\n    case ActionType.ERROR_FROM_ACTIVATION:\n      {\n        var _connector2 = payload.connector,\n            _error = payload.error;\n        return {\n          connector: _connector2,\n          error: _error\n        };\n      }\n\n    case ActionType.DEACTIVATE_CONNECTOR:\n      {\n        return {};\n      }\n  }\n}\n\nfunction useWeb3ReactManager() {\n  var _useReducer = useReducer(reducer, {}),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var connector = state.connector,\n      provider = state.provider,\n      chainId = state.chainId,\n      account = state.account,\n      onError = state.onError,\n      error = state.error;\n  var updateBusterRef = useRef(-1);\n  updateBusterRef.current += 1;\n  var activate = useCallback(function (connector, onError, throwErrors) {\n    if (throwErrors === void 0) {\n      throwErrors = false;\n    }\n\n    try {\n      var updateBusterInitial = updateBusterRef.current;\n      var activated = false;\n      return Promise.resolve(_catch(function () {\n        return Promise.resolve(connector.activate().then(function (update) {\n          activated = true;\n          return update;\n        })).then(function (update) {\n          return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {\n            if (updateBusterRef.current > updateBusterInitial) {\n              throw new StaleConnectorError();\n            }\n\n            dispatch({\n              type: ActionType.ACTIVATE_CONNECTOR,\n              payload: _extends({\n                connector: connector\n              }, augmentedUpdate, {\n                onError: onError\n              })\n            });\n          });\n        });\n      }, function (error) {\n        if (error instanceof StaleConnectorError) {\n          activated && connector.deactivate();\n          process.env.NODE_ENV !== \"production\" ? warning(false, \"Suppressed stale connector activation \" + connector) : void 0;\n        } else if (throwErrors) {\n          activated && connector.deactivate();\n          throw error;\n        } else if (onError) {\n          activated && connector.deactivate();\n          onError(error);\n        } else {\n          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect\n          dispatch({\n            type: ActionType.ERROR_FROM_ACTIVATION,\n            payload: {\n              connector: connector,\n              error: error\n            }\n          });\n        }\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, []);\n  var setError = useCallback(function (error) {\n    dispatch({\n      type: ActionType.ERROR,\n      payload: {\n        error: error\n      }\n    });\n  }, []);\n  var deactivate = useCallback(function () {\n    dispatch({\n      type: ActionType.DEACTIVATE_CONNECTOR\n    });\n  }, []);\n  var handleUpdate = useCallback(function (update) {\n    try {\n      if (!connector) {\n        throw Error(\"This should never happen, it's just so Typescript stops complaining\");\n      }\n\n      var updateBusterInitial = updateBusterRef.current; // updates are handled differently depending on whether the connector is active vs in an error state\n\n      return Promise.resolve(function () {\n        if (!error) {\n          var _chainId4 = update.chainId === undefined ? undefined : normalizeChainId(update.chainId);\n\n          if (_chainId4 !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(_chainId4)) {\n            var _error2 = new UnsupportedChainIdError(_chainId4, connector.supportedChainIds);\n\n            onError ? onError(_error2) : dispatch({\n              type: ActionType.ERROR,\n              payload: {\n                error: _error2\n              }\n            });\n          } else {\n            var _account4 = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account;\n\n            dispatch({\n              type: ActionType.UPDATE,\n              payload: {\n                provider: update.provider,\n                chainId: _chainId4,\n                account: _account4\n              }\n            });\n          }\n        } else {\n          return _catch(function () {\n            return Promise.resolve(augmentConnectorUpdate(connector, update)).then(function (augmentedUpdate) {\n              if (updateBusterRef.current > updateBusterInitial) {\n                throw new StaleConnectorError();\n              }\n\n              dispatch({\n                type: ActionType.UPDATE_FROM_ERROR,\n                payload: augmentedUpdate\n              });\n            });\n          }, function (error) {\n            if (error instanceof StaleConnectorError) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, \"Suppressed stale connector update from error state \" + connector + \" \" + update) : void 0;\n            } else {\n              // though we don't have to, we're re-circulating the new error\n              onError ? onError(error) : dispatch({\n                type: ActionType.ERROR,\n                payload: {\n                  error: error\n                }\n              });\n            }\n          });\n        }\n      }());\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }, [connector, error, onError]);\n  var handleError = useCallback(function (error) {\n    onError ? onError(error) : dispatch({\n      type: ActionType.ERROR,\n      payload: {\n        error: error\n      }\n    });\n  }, [onError]);\n  var handleDeactivate = useCallback(function () {\n    dispatch({\n      type: ActionType.DEACTIVATE_CONNECTOR\n    });\n  }, []); // ensure that connectors which were set are deactivated\n\n  useEffect(function () {\n    return function () {\n      if (connector) {\n        connector.deactivate();\n      }\n    };\n  }, [connector]); // ensure that events emitted from the set connector are handled appropriately\n\n  useEffect(function () {\n    if (connector) {\n      connector.on(ConnectorEvent.Update, handleUpdate).on(ConnectorEvent.Error, handleError).on(ConnectorEvent.Deactivate, handleDeactivate);\n    }\n\n    return function () {\n      if (connector) {\n        connector.off(ConnectorEvent.Update, handleUpdate).off(ConnectorEvent.Error, handleError).off(ConnectorEvent.Deactivate, handleDeactivate);\n      }\n    };\n  }, [connector, handleUpdate, handleError, handleDeactivate]);\n  return {\n    connector: connector,\n    provider: provider,\n    chainId: chainId,\n    account: account,\n    activate: activate,\n    setError: setError,\n    deactivate: deactivate,\n    error: error\n  };\n}\n\nvar PRIMARY_KEY = 'primary';\nvar CONTEXTS = {};\n\nfunction createWeb3ReactRoot(key) {\n  !!CONTEXTS[key] ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"A root already exists for provided key \" + key) : invariant(false) : void 0;\n  CONTEXTS[key] = createContext({\n    activate: function () {\n      try {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false) : void 0;\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    },\n    setError: function setError() {\n      process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false);\n    },\n    deactivate: function deactivate() {\n      process.env.NODE_ENV !== \"production\" ? invariant(false, 'No <Web3ReactProvider ... /> found.') : invariant(false);\n    },\n    active: false\n  });\n  CONTEXTS[key].displayName = \"Web3ReactContext - \" + key;\n  var Provider = CONTEXTS[key].Provider;\n  return function Web3ReactProvider(_ref) {\n    var getLibrary = _ref.getLibrary,\n        children = _ref.children;\n\n    var _useWeb3ReactManager = useWeb3ReactManager(),\n        connector = _useWeb3ReactManager.connector,\n        provider = _useWeb3ReactManager.provider,\n        chainId = _useWeb3ReactManager.chainId,\n        account = _useWeb3ReactManager.account,\n        activate = _useWeb3ReactManager.activate,\n        setError = _useWeb3ReactManager.setError,\n        deactivate = _useWeb3ReactManager.deactivate,\n        error = _useWeb3ReactManager.error;\n\n    var active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error;\n    var library = useMemo(function () {\n      return active && chainId !== undefined && Number.isInteger(chainId) && !!connector ? getLibrary(provider, connector) : undefined;\n    }, [active, getLibrary, provider, connector, chainId]);\n    var web3ReactContext = {\n      connector: connector,\n      library: library,\n      chainId: chainId,\n      account: account,\n      activate: activate,\n      setError: setError,\n      deactivate: deactivate,\n      active: active,\n      error: error\n    };\n    return React.createElement(Provider, {\n      value: web3ReactContext\n    }, children);\n  };\n}\n\nvar Web3ReactProvider = /*#__PURE__*/createWeb3ReactRoot(PRIMARY_KEY);\n\nfunction getWeb3ReactContext(key) {\n  if (key === void 0) {\n    key = PRIMARY_KEY;\n  }\n\n  !Object.keys(CONTEXTS).includes(key) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Invalid key \" + key) : invariant(false) : void 0;\n  return CONTEXTS[key];\n}\n\nfunction useWeb3React(key) {\n  return useContext(getWeb3ReactContext(key));\n}\n\nexport { PRIMARY_KEY, UnsupportedChainIdError, Web3ReactProvider, createWeb3ReactRoot, getWeb3ReactContext, useWeb3React };","map":{"version":3,"sources":["../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/normalizers.ts","../src/manager.ts","../src/provider.tsx"],"names":["_iteratorSymbol","Symbol","_asyncIteratorSymbol","result","body","recover","normalizeChainId","chainId","parsedChainId","Number","normalizeAccount","_address","address","chars","charsArray","i","hashed","arrayify","keccak256","addressChecksum","StaleConnectorError","Error","UnsupportedChainIdError","ActionType","type","payload","connector","provider","account","onError","error","undefined","state","augmentConnectorUpdate","update","_chainId","_account","Promise","useWeb3ReactManager","dispatch","useReducer","updateBusterRef","useRef","activate","useCallback","throwErrors","updateBusterInitial","activated","setError","deactivate","DEACTIVATE_CONNECTOR","handleUpdate","augmentedUpdate","handleError","handleDeactivate","useEffect","ConnectorEvent","PRIMARY_KEY","CONTEXTS","createWeb3ReactRoot","key","createContext","active","Provider","getLibrary","children","library","useMemo","web3ReactContext","value","Web3ReactProvider","getWeb3ReactContext","Object","useWeb3React","useContext"],"mappings":"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","sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { arrayify } from '@ethersproject/bytes'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport invariant from 'tiny-invariant'\n\nexport function normalizeChainId(chainId: string | number): number {\n  if (typeof chainId === 'string') {\n    // Temporary fix until the next version of Metamask Mobile gets released.\n    // In the current version (0.2.13), the chainId starts with “Ox” rather\n    // than “0x”. Fix: https://github.com/MetaMask/metamask-mobile/pull/1275\n    chainId = chainId.replace(/^Ox/, '0x')\n\n    const parsedChainId = Number.parseInt(chainId, chainId.trim().substring(0, 2) === '0x' ? 16 : 10)\n    invariant(!Number.isNaN(parsedChainId), `chainId ${chainId} is not an integer`)\n    return parsedChainId\n  } else {\n    invariant(Number.isInteger(chainId), `chainId ${chainId} is not an integer`)\n    return chainId\n  }\n}\n\n// https://github.com/ethers-io/ethers.js/blob/d9d438a119bb11f8516fc9cf02c534ab3816fcb3/packages/address/src.ts/index.ts\nexport function normalizeAccount(_address: string): string {\n  invariant(typeof _address === 'string' && _address.match(/^(0x)?[0-9a-fA-F]{40}$/), `Invalid address ${_address}`)\n\n  const address = _address.substring(0, 2) === '0x' ? _address : `0x${_address}`\n  const chars = address\n    .toLowerCase()\n    .substring(2)\n    .split('')\n\n  const charsArray = new Uint8Array(40)\n  for (let i = 0; i < 40; i++) {\n    charsArray[i] = chars[i].charCodeAt(0)\n  }\n  const hashed = arrayify(keccak256(charsArray))\n\n  for (let i = 0; i < 40; i += 2) {\n    if (hashed[i >> 1] >> 4 >= 8) {\n      chars[i] = chars[i].toUpperCase()\n    }\n    if ((hashed[i >> 1] & 0x0f) >= 8) {\n      chars[i + 1] = chars[i + 1].toUpperCase()\n    }\n  }\n\n  const addressChecksum = `0x${chars.join('')}`\n\n  invariant(\n    !(address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && address !== addressChecksum),\n    `Bad address checksum ${address} ${addressChecksum}`\n  )\n\n  return addressChecksum\n}\n","import { useReducer, useEffect, useCallback, useRef } from 'react'\nimport { ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { Web3ReactManagerReturn } from './types'\nimport { normalizeChainId, normalizeAccount } from './normalizers'\n\nclass StaleConnectorError extends Error {\n  constructor() {\n    super()\n    this.name = this.constructor.name\n  }\n}\n\nexport class UnsupportedChainIdError extends Error {\n  public constructor(unsupportedChainId: number, supportedChainIds?: readonly number[]) {\n    super()\n    this.name = this.constructor.name\n    this.message = `Unsupported chain id: ${unsupportedChainId}. Supported chain ids are: ${supportedChainIds}.`\n  }\n}\n\ninterface Web3ReactManagerState {\n  connector?: AbstractConnector\n  provider?: any\n  chainId?: number\n  account?: null | string\n\n  onError?: (error: Error) => void\n\n  error?: Error\n}\n\nenum ActionType {\n  ACTIVATE_CONNECTOR,\n  UPDATE,\n  UPDATE_FROM_ERROR,\n  ERROR,\n  ERROR_FROM_ACTIVATION,\n  DEACTIVATE_CONNECTOR\n}\n\ninterface Action {\n  type: ActionType\n  payload?: any\n}\n\nfunction reducer(state: Web3ReactManagerState, { type, payload }: Action): Web3ReactManagerState {\n  switch (type) {\n    case ActionType.ACTIVATE_CONNECTOR: {\n      const { connector, provider, chainId, account, onError } = payload\n      return { connector, provider, chainId, account, onError }\n    }\n    case ActionType.UPDATE: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account })\n      }\n    }\n    case ActionType.UPDATE_FROM_ERROR: {\n      const { provider, chainId, account } = payload\n      return {\n        ...state,\n        ...(provider === undefined ? {} : { provider }),\n        ...(chainId === undefined ? {} : { chainId }),\n        ...(account === undefined ? {} : { account }),\n        error: undefined\n      }\n    }\n    case ActionType.ERROR: {\n      const { error } = payload\n      const { connector, onError } = state\n      return {\n        connector,\n        error,\n        onError\n      }\n    }\n    case ActionType.ERROR_FROM_ACTIVATION: {\n      const { connector, error } = payload\n      return {\n        connector,\n        error\n      }\n    }\n    case ActionType.DEACTIVATE_CONNECTOR: {\n      return {}\n    }\n  }\n}\n\nasync function augmentConnectorUpdate(\n  connector: AbstractConnector,\n  update: ConnectorUpdate\n): Promise<ConnectorUpdate<number>> {\n  const provider = update.provider === undefined ? await connector.getProvider() : update.provider\n  const [_chainId, _account] = (await Promise.all([\n    update.chainId === undefined ? connector.getChainId() : update.chainId,\n    update.account === undefined ? connector.getAccount() : update.account\n  ])) as [Required<ConnectorUpdate>['chainId'], Required<ConnectorUpdate>['account']]\n\n  const chainId = normalizeChainId(_chainId)\n  if (!!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n    throw new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n  }\n  const account = _account === null ? _account : normalizeAccount(_account)\n\n  return { provider, chainId, account }\n}\n\nexport function useWeb3ReactManager(): Web3ReactManagerReturn {\n  const [state, dispatch] = useReducer(reducer, {})\n  const { connector, provider, chainId, account, onError, error } = state\n\n  const updateBusterRef = useRef(-1)\n  updateBusterRef.current += 1\n\n  const activate = useCallback(\n    async (\n      connector: AbstractConnector,\n      onError?: (error: Error) => void,\n      throwErrors: boolean = false\n    ): Promise<void> => {\n      const updateBusterInitial = updateBusterRef.current\n\n      let activated = false\n      try {\n        const update = await connector.activate().then(\n          (update): ConnectorUpdate => {\n            activated = true\n            return update\n          }\n        )\n\n        const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n        if (updateBusterRef.current > updateBusterInitial) {\n          throw new StaleConnectorError()\n        }\n        dispatch({ type: ActionType.ACTIVATE_CONNECTOR, payload: { connector, ...augmentedUpdate, onError } })\n      } catch (error) {\n        if (error instanceof StaleConnectorError) {\n          activated && connector.deactivate()\n          warning(false, `Suppressed stale connector activation ${connector}`)\n        } else if (throwErrors) {\n          activated && connector.deactivate()\n          throw error\n        } else if (onError) {\n          activated && connector.deactivate()\n          onError(error)\n        } else {\n          // we don't call activated && connector.deactivate() here because it'll be handled in the useEffect\n          dispatch({ type: ActionType.ERROR_FROM_ACTIVATION, payload: { connector, error } })\n        }\n      }\n    },\n    []\n  )\n\n  const setError = useCallback((error: Error): void => {\n    dispatch({ type: ActionType.ERROR, payload: { error } })\n  }, [])\n\n  const deactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  const handleUpdate = useCallback(\n    async (update: ConnectorUpdate): Promise<void> => {\n      if (!connector) {\n        throw Error(\"This should never happen, it's just so Typescript stops complaining\")\n      }\n\n      const updateBusterInitial = updateBusterRef.current\n\n      // updates are handled differently depending on whether the connector is active vs in an error state\n      if (!error) {\n        const chainId = update.chainId === undefined ? undefined : normalizeChainId(update.chainId)\n        if (chainId !== undefined && !!connector.supportedChainIds && !connector.supportedChainIds.includes(chainId)) {\n          const error = new UnsupportedChainIdError(chainId, connector.supportedChainIds)\n          onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n        } else {\n          const account = typeof update.account === 'string' ? normalizeAccount(update.account) : update.account\n          dispatch({ type: ActionType.UPDATE, payload: { provider: update.provider, chainId, account } })\n        }\n      } else {\n        try {\n          const augmentedUpdate = await augmentConnectorUpdate(connector, update)\n\n          if (updateBusterRef.current > updateBusterInitial) {\n            throw new StaleConnectorError()\n          }\n          dispatch({ type: ActionType.UPDATE_FROM_ERROR, payload: augmentedUpdate })\n        } catch (error) {\n          if (error instanceof StaleConnectorError) {\n            warning(false, `Suppressed stale connector update from error state ${connector} ${update}`)\n          } else {\n            // though we don't have to, we're re-circulating the new error\n            onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n          }\n        }\n      }\n    },\n    [connector, error, onError]\n  )\n  const handleError = useCallback(\n    (error: Error): void => {\n      onError ? onError(error) : dispatch({ type: ActionType.ERROR, payload: { error } })\n    },\n    [onError]\n  )\n  const handleDeactivate = useCallback((): void => {\n    dispatch({ type: ActionType.DEACTIVATE_CONNECTOR })\n  }, [])\n\n  // ensure that connectors which were set are deactivated\n  useEffect((): (() => void) => {\n    return () => {\n      if (connector) {\n        connector.deactivate()\n      }\n    }\n  }, [connector])\n\n  // ensure that events emitted from the set connector are handled appropriately\n  useEffect((): (() => void) => {\n    if (connector) {\n      connector\n        .on(ConnectorEvent.Update, handleUpdate)\n        .on(ConnectorEvent.Error, handleError)\n        .on(ConnectorEvent.Deactivate, handleDeactivate)\n    }\n\n    return () => {\n      if (connector) {\n        connector\n          .off(ConnectorEvent.Update, handleUpdate)\n          .off(ConnectorEvent.Error, handleError)\n          .off(ConnectorEvent.Deactivate, handleDeactivate)\n      }\n    }\n  }, [connector, handleUpdate, handleError, handleDeactivate])\n\n  return { connector, provider, chainId, account, activate, setError, deactivate, error }\n}\n","import React, { createContext, useContext, useMemo } from 'react'\nimport invariant from 'tiny-invariant'\n\nimport { Web3ReactContextInterface } from './types'\nimport { useWeb3ReactManager } from './manager'\n\nexport const PRIMARY_KEY = 'primary'\nconst CONTEXTS: { [key: string]: React.Context<Web3ReactContextInterface> } = {}\n\ninterface Web3ReactProviderArguments {\n  getLibrary: (provider?: any, connector?: Required<Web3ReactContextInterface>['connector']) => any\n  children: any\n}\n\nexport function createWeb3ReactRoot(key: string): (args: Web3ReactProviderArguments) => JSX.Element {\n  invariant(!CONTEXTS[key], `A root already exists for provided key ${key}`)\n\n  CONTEXTS[key] = createContext<Web3ReactContextInterface>({\n    activate: async () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    setError: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    deactivate: () => {\n      invariant(false, 'No <Web3ReactProvider ... /> found.')\n    },\n    active: false\n  })\n  CONTEXTS[key].displayName = `Web3ReactContext - ${key}`\n\n  const Provider = CONTEXTS[key].Provider\n\n  return function Web3ReactProvider({ getLibrary, children }: Web3ReactProviderArguments): JSX.Element {\n    const {\n      connector,\n      provider,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      error\n    } = useWeb3ReactManager()\n\n    const active = connector !== undefined && chainId !== undefined && account !== undefined && !!!error\n    const library = useMemo(\n      () =>\n        active && chainId !== undefined && Number.isInteger(chainId) && !!connector\n          ? getLibrary(provider, connector)\n          : undefined,\n      [active, getLibrary, provider, connector, chainId]\n    )\n\n    const web3ReactContext: Web3ReactContextInterface = {\n      connector,\n      library,\n      chainId,\n      account,\n\n      activate,\n      setError,\n      deactivate,\n\n      active,\n      error\n    }\n\n    return <Provider value={web3ReactContext}>{children}</Provider>\n  }\n}\n\nexport const Web3ReactProvider = createWeb3ReactRoot(PRIMARY_KEY)\n\nexport function getWeb3ReactContext<T = any>(key: string = PRIMARY_KEY): React.Context<Web3ReactContextInterface<T>> {\n  invariant(Object.keys(CONTEXTS).includes(key), `Invalid key ${key}`)\n  return CONTEXTS[key]\n}\n\nexport function useWeb3React<T = any>(key?: string): Web3ReactContextInterface<T> {\n  return useContext(getWeb3ReactContext(key))\n}\n"]},"metadata":{},"sourceType":"module"}